package palaceProtos;

option java_package = "com.kegelapps.palace.protos";
option java_outer_classname = "StateProtos";

import "Cards.proto";

message State {
    extensions 100 to max;
    required int32 type = 1;

    required int32 status = 2;
    optional int32 previous_status = 3;

    required bool  paused = 4;

    repeated State childrenStates = 5;

    required int32 id = 6;
}

message MainState {
    extend State {
        optional MainState state = 100;
    }
    required int32 mainState = 1;
}

message DealState {
    extend State {
        optional DealState state = 101;
    }
    required int32 round=1;
}

message PlayState {
    extend State {
        optional PlayState state = 102;
    }
}

message SelectEndCardState {
    extend State {
        optional SelectEndCardState state = 103;
    }
    required int32 currentState = 1;
}
//Substates
message DealCardState {
    extend State {
        optional DealCardState state = 104;
    }
    required int32 currentState = 1;
    required bool hidden = 2;
    optional Card card = 3;
}

message PlaceEndCardState {
    extend State {
        optional PlaceEndCardState state = 105;
    }
    optional int32 placeState = 1;
}

message PlayTurnState {
    extend State {
        optional PlayTurnState state = 106;
    }
    required int32 turnState = 1;
}

message PlayCPUTurnState {
    extend State {
        optional PlayCPUTurnState state = 111;
    }
    optional bool playMultiple = 1;
}


message PlayHumanTurnState {
    extend State {
        optional PlayHumanTurnState state = 107;
    }
    optional Card playCard = 1;
    optional bool deckTapped = 2;
    optional bool playTapped = 3;
}

message TapToStartState {
    extend State {
        optional TapToStartState state = 108;
    }
    required bool tapped = 1;
}

message PlayHiddenAttemptState {
    extend State {
        optional PlayHiddenAttemptState state = 109;
    }
    optional Card playCard = 1;
    optional int32 hiddenState = 2;
}

message DrawPlayCardState {
    extend State {
        optional DrawPlayCardState state = 110;
    }
    optional int32 drawState = 1;
}



